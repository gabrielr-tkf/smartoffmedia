@using Photon.Entities;
@using Photon.WebAPI.Utilities;
@{
    List<BathroomLine> bathroomLines = (CacheManager.Get(Constants.BathLines) as List<BathroomLine>);
}

<div>Bath 1 state: @(bathroomLines[0].Bathroom.IsOccupied ? "Occupied" : "Free")</div>
<div>Bath 2 state: @(bathroomLines[1].Bathroom.IsOccupied ? "Occupied" : "Free")</div>
<div>Bath 3 state: @(bathroomLines[2].Bathroom.IsOccupied ? "Occupied" : "Free")</div>

<br />
<div>Bath 1 Line: @ViewBag.Line1</div>
<div>Bath 2 Line: @ViewBag.Line2</div>
<div>Bath 3 Line:: @ViewBag.Line3</div>
<br />
<div>Bath 1 Last time first changed: @bathroomLines[0].LastTimesFirstChanged.ToString("HH:mm:ss")</div>
<div>Bath 2 Last time first changed: @bathroomLines[1].LastTimesFirstChanged.ToString("HH:mm:ss")</div>
<div>Bath 3 Last time first changed: @bathroomLines[2].LastTimesFirstChanged.ToString("HH:mm:ss")</div>
<br />
<div>Bath 1 Last freed time: @bathroomLines[0].Bathroom.LastFreedTime.ToString("HH:mm:ss")</div>
<div>Bath 2 Last freed time: @bathroomLines[1].Bathroom.LastFreedTime.ToString("HH:mm:ss")</div>
<div>Bath 3 Last freed time: @bathroomLines[2].Bathroom.LastFreedTime.ToString("HH:mm:ss")</div>
<br />
<div>Bath 1 Last occupied time: @bathroomLines[0].Bathroom.LastOccupiedTime.ToString("HH:mm:ss")</div>
<div>Bath 2 Last occupied time: @bathroomLines[1].Bathroom.LastOccupiedTime.ToString("HH:mm:ss")</div>
<div>Bath 3 Last occupied time: @bathroomLines[2].Bathroom.LastOccupiedTime.ToString("HH:mm:ss")</div>
<br />
<br />

<div>Sensor 1 state: @if(bathroomLines[0].Bathroom.PhotonDevice.PIRSensorValue != null) {

                         @bathroomLines[0].Bathroom.PhotonDevice.PIRSensorValue;

                     }</div>

<div>Sensor 2 state: @if(bathroomLines[0].Bathroom.PhotonDevice.ProximityValue != null) {

                         @bathroomLines[0].Bathroom.PhotonDevice.ProximityValue;

                     }</div>

<div>Sensor 3 state: @if(bathroomLines[0].Bathroom.PhotonDevice.PhotoSensorValue != null) {

                         @bathroomLines[0].Bathroom.PhotonDevice.PhotoSensorValue;

                     }</div>

<br />
<br />

<div><b>Last 20 notifications:</b></div>
<br />
@{
    List<string> last20Notifications = (CacheManager.Get("Notifications") as List<string>).Skip((CacheManager.Get("Notifications") as List<string>).Count - 20).ToList();
}

@foreach(string n in last20Notifications){
    <div>@n</div>
}